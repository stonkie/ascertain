<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>preview</LangVersion>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    </PropertyGroup>

    <ItemGroup>
        <!--    TODO : Fix this hack and make it work cleanly on multiple targets-->
        <PackageReference Include="libLLVM" Version="15.0.0" />
        <PackageReference Include="libLLVM.runtime.win-x64" Version="15.0.0" GeneratePathProperty="true" />
        
        <None Include="$(NugetPackageRoot)\libllvm.runtime.win-x64\15.0.0\runtimes\win-x64\native\libLLVM.dll" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="LLVMSharp" Version="15.0.0-beta1" />
        <PackageReference Include="System.Linq.Async" Version="6.0.1" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="Compiler.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Compiler.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Include="SystemTypes\System.asc" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="..\Ascertain.Backbone\cmake-build-debug\Ascertain.Backbone.dll">
        <Link>Ascertain.Backbone.dll</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>

        <!-- TODO : Send this into a nuget -->
      <Content Include="C:\Program Files\LLVM\bin\clang.exe">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

</Project>
